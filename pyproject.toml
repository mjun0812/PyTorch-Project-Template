[tool.poetry]
name = "pytorch-project-template"
version = "2.0.0"
description = ""
authors = ["Junya Morioka <mjun@mjunya.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
matplotlib = "^3.7.2"
omegaconf = "^2.3.0"
opencv-python = "^4.8.0.74"
pillow = "^10.0.0"
python-dotenv = "^1.0.0"
requests = "^2.31.0"
tabulate = "^0.9.0"
torch = [
    # M1 Mac
    { url = "https://download.pytorch.org/whl/cpu/torch-2.0.1-cp311-none-macosx_11_0_arm64.whl", markers = "sys_platform == 'darwin'" },
    # Docker on M1 Mac
    { url = "https://download.pytorch.org/whl/torch-2.0.1-cp311-cp311-manylinux2014_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
    # Linux
    { url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp311-cp311-linux_x86_64.whl", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
]
torchvision = [
    # M1 Mac
    { url = "https://download.pytorch.org/whl/cpu/torchvision-0.15.2-cp311-cp311-macosx_11_0_arm64.whl", markers = "sys_platform == 'darwin'" },
    # Docker on M1 Mac
    { url = "https://download.pytorch.org/whl/torchvision-0.15.2-cp311-cp311-manylinux2014_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
    # Linux
    { url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp311-cp311-linux_x86_64.whl", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
]
tqdm = "^4.65.0"
mlflow = "^2.6.0"
kunai = { git = "https://github.com/mjun0812/kunai" }
torchinfo = "^1.8.0"
torchmetrics = "^1.0.1"
natsort = "^8.4.0"
numpy = "^1.25.1"
timm = "^0.9.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.280"
black = "^23.7.0"
notebook = "^7.0.2"


[tool.black]
line-length = 99
target-version = ["py311"]

[tool.ruff]
select = [
    "F", # pyflakes
    "E", # pycodestyle error
    "W", # pycodestyle warnings
]
ignore = [
    "G004", # logging-f-string
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
target-version = "py311"
line-length = 99

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
